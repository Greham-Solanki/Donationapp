{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\greha\\\\OneDrive\\\\Desktop\\\\Capstone\\\\app22-10\\\\frontend\\\\src\\\\components\\\\DonationDetails.js\";\n// src/components/DonationDetails.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Chat from './Chat';\nconst DonationDetails = ({\n  currentUserId\n}) => {\n  const [donation, setDonation] = useState(null);\n  const [initialMessage, setInitialMessage] = useState(\"\");\n  const [showChat, setShowChat] = useState(false);\n  const [error, setError] = useState(\"\"); // State to hold error messages\n  const navigate = useNavigate();\n  const {\n    donationId\n  } = useParams();\n  useEffect(() => {\n    const fetchDonation = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/donations/${donationId}`);\n        setDonation(response.data);\n      } catch (error) {\n        console.error(\"Error fetching donation data:\", error);\n        setError(\"Failed to load donation details.\");\n      }\n    };\n    fetchDonation();\n  }, [donationId]);\n  useEffect(() => {\n    if (donation) {\n      var _donation$donor;\n      console.log('Current User ID:', currentUserId); // Log currentUserId\n      console.log('Donation Donor ID:', (_donation$donor = donation.donor) === null || _donation$donor === void 0 ? void 0 : _donation$donor._id); // Log donation.donor._id\n    }\n  }, [donation, currentUserId]);\n  const handleSendMessage = async () => {\n    var _donation$donor2;\n    if (!initialMessage.trim()) return;\n\n    // Check for both user and donor IDs\n    if (!currentUserId || !(donation === null || donation === void 0 ? void 0 : (_donation$donor2 = donation.donor) === null || _donation$donor2 === void 0 ? void 0 : _donation$donor2._id)) {\n      console.error(\"Missing currentUserId or donation.donor._id\");\n      setError(\"Unable to send message due to missing user information.\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/chats', {\n        sender: currentUserId,\n        receiver: donation.donor._id,\n        // Access nested donor ID\n        message: initialMessage,\n        donationId: donation._id\n      });\n      if (response.status === 201) {\n        setInitialMessage(\"\"); // Clear message input\n        setShowChat(true); // Show chat component after sending the message\n      }\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error initiating chat:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setError(\"Failed to send message. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, error), \" \", donation ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, donation.itemName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, donation.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Category: \", donation.category), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Location: \", donation.location), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Status: \", donation.status), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Donor Information\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Name: \", donation.donor.name), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Email: \", donation.donor.email || 'Not provided'), \" \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Type your message...\",\n    value: initialMessage,\n    onChange: e => setInitialMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Send Message\"), showChat && /*#__PURE__*/React.createElement(Chat, {\n    userId: currentUserId,\n    donorId: donation.donor._id // Pass donorId to Chat component\n    ,\n    donationId: donation._id,\n    chatHistory: [],\n    setChatHistory: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Loading donation details...\"));\n};\nexport default DonationDetails;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useParams","Chat","DonationDetails","currentUserId","donation","setDonation","initialMessage","setInitialMessage","showChat","setShowChat","error","setError","navigate","donationId","fetchDonation","response","get","data","console","_donation$donor","log","donor","_id","handleSendMessage","_donation$donor2","trim","post","sender","receiver","message","status","_error$response","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","Fragment","itemName","description","category","location","name","email","placeholder","value","onChange","e","target","onClick","userId","donorId","chatHistory","setChatHistory"],"sources":["C:/Users/greha/OneDrive/Desktop/Capstone/app22-10/frontend/src/components/DonationDetails.js"],"sourcesContent":["// src/components/DonationDetails.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Chat from './Chat';\r\n\r\nconst DonationDetails = ({ currentUserId }) => {\r\n  const [donation, setDonation] = useState(null);\r\n  const [initialMessage, setInitialMessage] = useState(\"\");\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [error, setError] = useState(\"\"); // State to hold error messages\r\n  const navigate = useNavigate();\r\n  const { donationId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchDonation = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/donations/${donationId}`);\r\n        setDonation(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching donation data:\", error);\r\n        setError(\"Failed to load donation details.\");\r\n      }\r\n    };\r\n\r\n    fetchDonation();\r\n  }, [donationId]);\r\n\r\n  useEffect(() => {\r\n    if (donation) {\r\n      console.log('Current User ID:', currentUserId); // Log currentUserId\r\n      console.log('Donation Donor ID:', donation.donor?._id); // Log donation.donor._id\r\n    }\r\n  }, [donation, currentUserId]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!initialMessage.trim()) return;\r\n\r\n    // Check for both user and donor IDs\r\n    if (!currentUserId || !donation?.donor?._id) { \r\n      console.error(\"Missing currentUserId or donation.donor._id\");\r\n      setError(\"Unable to send message due to missing user information.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/chats', {\r\n        sender: currentUserId,\r\n        receiver: donation.donor._id,  // Access nested donor ID\r\n        message: initialMessage,\r\n        donationId: donation._id\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        setInitialMessage(\"\"); // Clear message input\r\n        setShowChat(true); // Show chat component after sending the message\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error initiating chat:\", error.response?.data || error.message);\r\n      setError(\"Failed to send message. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {error && <p className=\"error\">{error}</p>} {/* Display error if any */}\r\n      {donation ? (\r\n        <>\r\n          <h2>{donation.itemName}</h2>\r\n          <p>{donation.description}</p>\r\n          <p>Category: {donation.category}</p>\r\n          <p>Location: {donation.location}</p>\r\n          <p>Status: {donation.status}</p>\r\n\r\n          {/* Display donor information */}\r\n          <div>\r\n            <h3>Donor Information</h3>\r\n            <p>Name: {donation.donor.name}</p> {/* Assuming the donor model has a name field */}\r\n            <p>Email: {donation.donor.email || 'Not provided'}</p> {/* Assuming the donor model has an email field, defaulting to 'Not provided' if not available */}\r\n          </div>\r\n\r\n          <textarea\r\n            placeholder=\"Type your message...\"\r\n            value={initialMessage}\r\n            onChange={(e) => setInitialMessage(e.target.value)}\r\n          />\r\n          <button onClick={handleSendMessage}>Send Message</button>\r\n\r\n          {showChat && (\r\n            <Chat \r\n              userId={currentUserId} \r\n              donorId={donation.donor._id} // Pass donorId to Chat component\r\n              donationId={donation._id} \r\n              chatHistory={[]} \r\n              setChatHistory={() => {}} \r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p>Loading donation details...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DonationDetails;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,IAAI,MAAM,QAAQ;AAEzB,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAMgB,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEc;EAAW,CAAC,GAAGb,SAAS,CAAC,CAAC;EAElCH,SAAS,CAAC,MAAM;IACd,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,uCAAuCH,UAAU,EAAE,CAAC;QACrFR,WAAW,CAACU,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdQ,OAAO,CAACR,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDC,QAAQ,CAAC,kCAAkC,CAAC;MAC9C;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACD,UAAU,CAAC,CAAC;EAEhBhB,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,EAAE;MAAA,IAAAe,eAAA;MACZD,OAAO,CAACE,GAAG,CAAC,kBAAkB,EAAEjB,aAAa,CAAC,CAAC,CAAC;MAChDe,OAAO,CAACE,GAAG,CAAC,oBAAoB,GAAAD,eAAA,GAAEf,QAAQ,CAACiB,KAAK,cAAAF,eAAA,uBAAdA,eAAA,CAAgBG,GAAG,CAAC,CAAC,CAAC;IAC1D;EACF,CAAC,EAAE,CAAClB,QAAQ,EAAED,aAAa,CAAC,CAAC;EAE7B,MAAMoB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,gBAAA;IACpC,IAAI,CAAClB,cAAc,CAACmB,IAAI,CAAC,CAAC,EAAE;;IAE5B;IACA,IAAI,CAACtB,aAAa,IAAI,EAACC,QAAQ,aAARA,QAAQ,wBAAAoB,gBAAA,GAARpB,QAAQ,CAAEiB,KAAK,cAAAG,gBAAA,uBAAfA,gBAAA,CAAiBF,GAAG,GAAE;MAC3CJ,OAAO,CAACR,KAAK,CAAC,6CAA6C,CAAC;MAC5DC,QAAQ,CAAC,yDAAyD,CAAC;MACnE;IACF;IAEA,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMjB,KAAK,CAAC4B,IAAI,CAAC,iCAAiC,EAAE;QACnEC,MAAM,EAAExB,aAAa;QACrByB,QAAQ,EAAExB,QAAQ,CAACiB,KAAK,CAACC,GAAG;QAAG;QAC/BO,OAAO,EAAEvB,cAAc;QACvBO,UAAU,EAAET,QAAQ,CAACkB;MACvB,CAAC,CAAC;MAEF,IAAIP,QAAQ,CAACe,MAAM,KAAK,GAAG,EAAE;QAC3BvB,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;QACvBE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;MACrB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAqB,eAAA;MACdb,OAAO,CAACR,KAAK,CAAC,wBAAwB,EAAE,EAAAqB,eAAA,GAAArB,KAAK,CAACK,QAAQ,cAAAgB,eAAA,uBAAdA,eAAA,CAAgBd,IAAI,KAAIP,KAAK,CAACmB,OAAO,CAAC;MAC9ElB,QAAQ,CAAC,2CAA2C,CAAC;IACvD;EACF,CAAC;EAED,oBACEhB,KAAA,CAAAqC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACG5B,KAAK,iBAAIf,KAAA,CAAAqC,aAAA;IAAGO,SAAS,EAAC,OAAO;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE5B,KAAS,CAAC,EAAC,GAAC,EAC3CN,QAAQ,gBACPT,KAAA,CAAAqC,aAAA,CAAArC,KAAA,CAAA6C,QAAA,qBACE7C,KAAA,CAAAqC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKlC,QAAQ,CAACqC,QAAa,CAAC,eAC5B9C,KAAA,CAAAqC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIlC,QAAQ,CAACsC,WAAe,CAAC,eAC7B/C,KAAA,CAAAqC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAU,EAAClC,QAAQ,CAACuC,QAAY,CAAC,eACpChD,KAAA,CAAAqC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAU,EAAClC,QAAQ,CAACwC,QAAY,CAAC,eACpCjD,KAAA,CAAAqC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,UAAQ,EAAClC,QAAQ,CAAC0B,MAAU,CAAC,eAGhCnC,KAAA,CAAAqC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE3C,KAAA,CAAAqC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,mBAAqB,CAAC,eAC1B3C,KAAA,CAAAqC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,QAAM,EAAClC,QAAQ,CAACiB,KAAK,CAACwB,IAAQ,CAAC,KAAC,eACnClD,KAAA,CAAAqC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,EAAClC,QAAQ,CAACiB,KAAK,CAACyB,KAAK,IAAI,cAAkB,CAAC,KACnD,CAAC,eAENnD,KAAA,CAAAqC,aAAA;IACEe,WAAW,EAAC,sBAAsB;IAClCC,KAAK,EAAE1C,cAAe;IACtB2C,QAAQ,EAAGC,CAAC,IAAK3C,iBAAiB,CAAC2C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpD,CAAC,eACF3C,KAAA,CAAAqC,aAAA;IAAQoB,OAAO,EAAE7B,iBAAkB;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAoB,CAAC,EAExD9B,QAAQ,iBACPb,KAAA,CAAAqC,aAAA,CAAC/B,IAAI;IACHoD,MAAM,EAAElD,aAAc;IACtBmD,OAAO,EAAElD,QAAQ,CAACiB,KAAK,CAACC,GAAI,CAAC;IAAA;IAC7BT,UAAU,EAAET,QAAQ,CAACkB,GAAI;IACzBiC,WAAW,EAAE,EAAG;IAChBC,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAE;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC1B,CAEH,CAAC,gBAEH3C,KAAA,CAAAqC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,6BAA8B,CAEhC,CAAC;AAEV,CAAC;AAED,eAAepC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}