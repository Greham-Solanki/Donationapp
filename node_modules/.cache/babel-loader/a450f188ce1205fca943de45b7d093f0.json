{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\greha\\\\OneDrive\\\\Desktop\\\\Capstone\\\\app22-10\\\\frontend\\\\src\\\\components\\\\Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nconst Chat = ({\n  userId\n}) => {\n  const {\n    donorId\n  } = useParams(); // Access donorId from URL\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  let socket;\n  useEffect(() => {\n    // Connect to WebSocket server\n    socket = io('http://localhost:5000');\n    socket.emit('joinChat', {\n      donorId,\n      doneeId: userId\n    });\n\n    // Listen for incoming messages\n    socket.on('messageReceived', message => {\n      setMessages(prev => [...prev, message]);\n    });\n\n    // Fetch previous messages\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch(`/api/chats/${donorId}/${userId}`);\n        const data = await response.json();\n        setMessages(data);\n      } catch (error) {\n        console.error('Failed to fetch messages:', error);\n      }\n    };\n    fetchMessages();\n    return () => {\n      socket.disconnect();\n    };\n  }, [donorId, userId]);\n  const handleSendMessage = async () => {\n    const messageData = {\n      sender: userId,\n      receiver: donorId,\n      message: newMessage\n    };\n    // Emit the message\n    socket.emit('sendMessage', messageData);\n\n    // Optionally, you can save the message in the database\n    try {\n      await axios.post('http://localhost:5000/api/chats', messageData); // Create a POST endpoint to save the message\n      setMessages(prev => [...prev, messageData]); // Update the messages state\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n    setNewMessage('');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Chat with Donor\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, msg.sender === userId ? \"You\" : \"Donor\", \": \", msg.message))), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: newMessage,\n    onChange: e => setNewMessage(e.target.value),\n    placeholder: \"Type a message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n};\nexport default Chat;","map":{"version":3,"names":["React","useEffect","useState","useParams","io","axios","Chat","userId","donorId","messages","setMessages","newMessage","setNewMessage","socket","emit","doneeId","on","message","prev","fetchMessages","response","fetch","data","json","error","console","disconnect","handleSendMessage","messageData","sender","receiver","post","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","key","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/greha/OneDrive/Desktop/Capstone/app22-10/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\nconst Chat = ({ userId }) => {\r\n  const { donorId } = useParams(); // Access donorId from URL\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  let socket;\r\n\r\n  useEffect(() => {\r\n    // Connect to WebSocket server\r\n    socket = io('http://localhost:5000');\r\n    socket.emit('joinChat', { donorId, doneeId: userId });\r\n\r\n    // Listen for incoming messages\r\n    socket.on('messageReceived', message => {\r\n      setMessages(prev => [...prev, message]);\r\n    });\r\n\r\n    // Fetch previous messages\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await fetch(`/api/chats/${donorId}/${userId}`);\r\n        const data = await response.json();\r\n        setMessages(data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [donorId, userId]);\r\n\r\n  const handleSendMessage = async () => {\r\n    const messageData = { sender: userId, receiver: donorId, message: newMessage };\r\n    // Emit the message\r\n    socket.emit('sendMessage', messageData);\r\n    \r\n    // Optionally, you can save the message in the database\r\n    try {\r\n      await axios.post('http://localhost:5000/api/chats', messageData); // Create a POST endpoint to save the message\r\n      setMessages(prev => [...prev, messageData]); // Update the messages state\r\n    } catch (error) {\r\n      console.error('Failed to send message:', error);\r\n    }\r\n    \r\n    setNewMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Chat with Donor</h3>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <p key={index}>{msg.sender === userId ? \"You\" : \"Donor\"}: {msg.message}</p>\r\n        ))}\r\n      </div>\r\n      <textarea\r\n        value={newMessage}\r\n        onChange={e => setNewMessage(e.target.value)}\r\n        placeholder=\"Type a message\"\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}