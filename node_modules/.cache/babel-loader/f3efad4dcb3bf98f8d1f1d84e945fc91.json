{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\greha\\\\OneDrive\\\\Desktop\\\\Capstone\\\\app22-10\\\\frontend\\\\src\\\\components\\\\DonationDetails.js\";\n// src/components/DonationDetails.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Chat from './Chat';\nconst DonationDetails = ({\n  currentUserId\n}) => {\n  const {\n    donationId\n  } = useParams(); // Extract donationId from URL params\n  const [donation, setDonation] = useState(null);\n  const [initialMessage, setInitialMessage] = useState(\"\");\n  const [showChat, setShowChat] = useState(false);\n  const [error, setError] = useState(\"\"); // State to hold error messages\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchDonationDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/donations/${donationId}`);\n        setDonation(response.data);\n\n        // Log the donor ID and current user ID\n        console.log('Donor ID:', response.data.donor._id); // Log the donor ID from the response\n        console.log('Current User ID:', currentUserId); // Log the current user's ID\n      } catch (error) {\n        console.error(\"Error fetching donation data:\", error);\n        setError(\"Failed to load donation details.\");\n      }\n    };\n    fetchDonationDetails();\n  }, [donationId, currentUserId]); // Include currentUserId in dependencies\n\n  const handleSendMessage = async () => {\n    var _donation$donor;\n    if (!initialMessage.trim()) return;\n    const donorId = donation === null || donation === void 0 ? void 0 : (_donation$donor = donation.donor) === null || _donation$donor === void 0 ? void 0 : _donation$donor._id;\n    if (!currentUserId || !donorId) {\n      console.error(\"Missing currentUserId or donation.donor._id\");\n      setError(\"Unable to send message due to missing user information.\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/chats', {\n        sender: currentUserId,\n        receiver: donorId,\n        // Use donor ID from API response\n        message: initialMessage,\n        donationId: donation._id\n      });\n      if (response.status === 201) {\n        setInitialMessage(\"\"); // Clear message input\n        setShowChat(true); // Show chat component after sending the message\n      }\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error initiating chat:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setError(\"Failed to send message. Please try again.\");\n    }\n  };\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Error: \", error); // Display error if any\n  if (!donation) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Loading donation details...\"); // Loading state\n\n  // Extract donor information\n  const donor = donation.donor || {}; // Access the donor from the donation object\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, donation.itemName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, donation.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Category: \", donation.category), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Location: \", donation.location), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Status: \", donation.status), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Donor Information\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, \"Name:\"), \" \", donor.name || 'Not provided'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }\n  }, \"Email:\"), \" \", donor.email || 'Not provided'), \" \", /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Type your message...\",\n    value: initialMessage,\n    onChange: e => setInitialMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Send Message\"), showChat && /*#__PURE__*/React.createElement(Chat, {\n    userId: currentUserId,\n    donorId: donor._id // Use the donorId from the API response\n    ,\n    donationId: donation._id,\n    chatHistory: [],\n    setChatHistory: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }));\n};\nexport default DonationDetails;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","Chat","DonationDetails","currentUserId","donationId","donation","setDonation","initialMessage","setInitialMessage","showChat","setShowChat","error","setError","navigate","fetchDonationDetails","response","get","data","console","log","donor","_id","handleSendMessage","_donation$donor","trim","donorId","post","sender","receiver","message","status","_error$response","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","itemName","description","category","location","name","email","placeholder","value","onChange","e","target","onClick","userId","chatHistory","setChatHistory"],"sources":["C:/Users/greha/OneDrive/Desktop/Capstone/app22-10/frontend/src/components/DonationDetails.js"],"sourcesContent":["// src/components/DonationDetails.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Chat from './Chat';\r\n\r\nconst DonationDetails = ({ currentUserId }) => {\r\n  const { donationId } = useParams(); // Extract donationId from URL params\r\n  const [donation, setDonation] = useState(null);\r\n  const [initialMessage, setInitialMessage] = useState(\"\");\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [error, setError] = useState(\"\"); // State to hold error messages\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchDonationDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/donations/${donationId}`);\r\n        setDonation(response.data);\r\n        \r\n        // Log the donor ID and current user ID\r\n        console.log('Donor ID:', response.data.donor._id); // Log the donor ID from the response\r\n        console.log('Current User ID:', currentUserId); // Log the current user's ID\r\n      } catch (error) {\r\n        console.error(\"Error fetching donation data:\", error);\r\n        setError(\"Failed to load donation details.\");\r\n      }\r\n    };\r\n\r\n    fetchDonationDetails();\r\n  }, [donationId, currentUserId]); // Include currentUserId in dependencies\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!initialMessage.trim()) return;\r\n\r\n    const donorId = donation?.donor?._id;\r\n\r\n    if (!currentUserId || !donorId) { \r\n      console.error(\"Missing currentUserId or donation.donor._id\");\r\n      setError(\"Unable to send message due to missing user information.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/chats', {\r\n        sender: currentUserId,\r\n        receiver: donorId,  // Use donor ID from API response\r\n        message: initialMessage,\r\n        donationId: donation._id\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        setInitialMessage(\"\"); // Clear message input\r\n        setShowChat(true); // Show chat component after sending the message\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error initiating chat:\", error.response?.data || error.message);\r\n      setError(\"Failed to send message. Please try again.\");\r\n    }\r\n  };\r\n\r\n  if (error) return <div>Error: {error}</div>; // Display error if any\r\n  if (!donation) return <div>Loading donation details...</div>; // Loading state\r\n\r\n  // Extract donor information\r\n  const donor = donation.donor || {}; // Access the donor from the donation object\r\n\r\n  return (\r\n    <div>\r\n      <h2>{donation.itemName}</h2>\r\n      <p>{donation.description}</p>\r\n      <p>Category: {donation.category}</p>\r\n      <p>Location: {donation.location}</p>\r\n      <p>Status: {donation.status}</p>\r\n      \r\n      <h3>Donor Information</h3>\r\n      <p><strong>Name:</strong> {donor.name || 'Not provided'}</p>\r\n      <p><strong>Email:</strong> {donor.email || 'Not provided'}</p> {/* Ensure you have an email field available */}\r\n\r\n      <textarea\r\n        placeholder=\"Type your message...\"\r\n        value={initialMessage}\r\n        onChange={(e) => setInitialMessage(e.target.value)}\r\n      />\r\n      <button onClick={handleSendMessage}>Send Message</button>\r\n\r\n      {showChat && (\r\n        <Chat \r\n          userId={currentUserId} \r\n          donorId={donor._id} // Use the donorId from the API response\r\n          donationId={donation._id} \r\n          chatHistory={[]} \r\n          setChatHistory={() => {}} \r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DonationDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}