{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\greha\\\\OneDrive\\\\Desktop\\\\Capstone\\\\app22-10\\\\frontend\\\\src\\\\components\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { apiGet } from '../utils/api';\nimport './Notifications.css'; // Make sure to import the new CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = ({\n  userId,\n  notifications\n}) => {\n  _s();\n  const [initialNotifications, setInitialNotifications] = useState([]);\n  const [allNotifications, setAllNotifications] = useState([]);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/notifications/user/${userId}`);\n        const fetchedNotifications = Array.isArray(response === null || response === void 0 ? void 0 : response.data) ? response.data : [];\n        setInitialNotifications(fetchedNotifications);\n        setAllNotifications(fetchedNotifications);\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n    if (userId) fetchNotifications();\n  }, [userId]);\n  useEffect(() => {\n    if (notifications && notifications.length > 0) {\n      setAllNotifications(prevNotifications => [...prevNotifications, ...notifications]);\n    }\n  }, [notifications]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"notifications-title\",\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), allNotifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-notifications\",\n      children: \"No notifications yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"notifications-list\",\n      children: allNotifications.map((note, index) => {\n        var _note$sender;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"notification-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"notification-message\",\n              children: `New message from ${((_note$sender = note.sender) === null || _note$sender === void 0 ? void 0 : _note$sender.name) || 'Unknown'}: ${note.content || note.message}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"xYTQ10mMcpJBbM4REBtTHXlThuI=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","axios","apiGet","jsxDEV","_jsxDEV","Notifications","userId","notifications","_s","initialNotifications","setInitialNotifications","allNotifications","setAllNotifications","fetchNotifications","response","get","fetchedNotifications","Array","isArray","data","error","console","length","prevNotifications","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","note","index","_note$sender","sender","name","content","message","_c","$RefreshReg$"],"sources":["C:/Users/greha/OneDrive/Desktop/Capstone/app22-10/frontend/src/components/Notifications.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { apiGet } from '../utils/api';\r\nimport './Notifications.css';  // Make sure to import the new CSS file\r\n\r\nconst Notifications = ({ userId, notifications }) => {\r\n  const [initialNotifications, setInitialNotifications] = useState([]);\r\n  const [allNotifications, setAllNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/notifications/user/${userId}`);\r\n        const fetchedNotifications = Array.isArray(response?.data) ? response.data : [];\r\n        setInitialNotifications(fetchedNotifications);\r\n        setAllNotifications(fetchedNotifications);\r\n      } catch (error) {\r\n        console.error(\"Error fetching notifications:\", error);\r\n      }\r\n    };\r\n\r\n    if (userId) fetchNotifications();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (notifications && notifications.length > 0) {\r\n      setAllNotifications((prevNotifications) => [\r\n        ...prevNotifications,\r\n        ...notifications,\r\n      ]);\r\n    }\r\n  }, [notifications]);\r\n\r\n  return (\r\n    <div className=\"notifications-container\">\r\n      <h2 className=\"notifications-title\">Notifications</h2>\r\n      {allNotifications.length === 0 ? (\r\n        <p className=\"no-notifications\">No notifications yet!</p>\r\n      ) : (\r\n        <ul className=\"notifications-list\">\r\n          {allNotifications.map((note, index) => (\r\n            <li key={index} className=\"notification-item\">\r\n              <div className=\"notification-content\">\r\n                <p className=\"notification-message\">{`New message from ${note.sender?.name || 'Unknown'}: ${note.content || note.message}`}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}