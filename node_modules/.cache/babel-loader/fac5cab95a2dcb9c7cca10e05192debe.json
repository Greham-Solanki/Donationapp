{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\greha\\\\OneDrive\\\\Desktop\\\\Capstone\\\\app22-10\\\\frontend\\\\src\\\\components\\\\Chat.js\";\n// Chat.js\nimport { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport React from 'react';\nconst socket = io('http://localhost:5000'); // Adjust this to your backend URL\n\nconst Chat = ({\n  donorId,\n  doneeId,\n  notifications,\n  setNotifications\n}) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  useEffect(() => {\n    // Listen for messages received from the server\n    socket.on('messageReceived', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n\n      // Add to notifications if message is relevant to the current user\n      if (message.receiver === donorId || message.sender === donorId) {\n        setNotifications(prevNotifications => [...prevNotifications, message]);\n      }\n    });\n    return () => {\n      socket.off('messageReceived');\n    };\n  }, [donorId, setNotifications]);\n  const handleSendMessage = () => {\n    if (!newMessage) return;\n    socket.emit('sendMessage', {\n      sender: donorId,\n      receiver: doneeId,\n      message: newMessage\n    });\n    setNewMessage('');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Chat\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxHeight: '300px',\n      overflowY: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, messages.map(msg => /*#__PURE__*/React.createElement(\"div\", {\n    key: msg._id,\n    className: \"chat-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, msg.sender === donorId ? 'Donor' : 'Donee', \":\"), \" \", msg.message))), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"chat-input\",\n    value: newMessage,\n    onChange: e => setNewMessage(e.target.value),\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n};\nexport default Chat;","map":{"version":3,"names":["useEffect","useState","io","React","socket","Chat","donorId","doneeId","notifications","setNotifications","messages","setMessages","newMessage","setNewMessage","on","message","prevMessages","receiver","sender","prevNotifications","off","handleSendMessage","emit","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","maxHeight","overflowY","map","msg","key","_id","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/greha/OneDrive/Desktop/Capstone/app22-10/frontend/src/components/Chat.js"],"sourcesContent":["// Chat.js\r\nimport { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './Chat.css';\r\nimport React from 'react';\r\n\r\n\r\nconst socket = io('http://localhost:5000'); // Adjust this to your backend URL\r\n\r\nconst Chat = ({ donorId, doneeId, notifications, setNotifications }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Listen for messages received from the server\r\n    socket.on('messageReceived', (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n      \r\n      // Add to notifications if message is relevant to the current user\r\n      if (message.receiver === donorId || message.sender === donorId) {\r\n        setNotifications((prevNotifications) => [...prevNotifications, message]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('messageReceived');\r\n    };\r\n  }, [donorId, setNotifications]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (!newMessage) return;\r\n\r\n    socket.emit('sendMessage', {\r\n      sender: donorId,\r\n      receiver: doneeId,\r\n      message: newMessage,\r\n    });\r\n    setNewMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h3>Chat</h3>\r\n      <div style={{ maxHeight: '300px', overflowY: 'scroll' }}>\r\n        {messages.map((msg) => (\r\n          <div key={msg._id} className=\"chat-message\">\r\n            <strong>{msg.sender === donorId ? 'Donor' : 'Donee'}:</strong> {msg.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <textarea\r\n        className=\"chat-input\"\r\n        value={newMessage}\r\n        onChange={(e) => setNewMessage(e.target.value)}\r\n        placeholder=\"Type your message...\"\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}