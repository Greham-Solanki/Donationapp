{"ast":null,"code":"// src/utils/api.js\nimport axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:5000',\n  // Your API base URL\n  timeout: 10000 // Set a timeout for requests\n});\n\n// Handle API responses and errors\nconst handleResponse = response => response.data;\nconst handleError = error => {\n  // Log the error for debugging\n  console.error('API call error:', error);\n\n  // Check if the error has a response (from the server)\n  if (error.response) {\n    // Custom error messages based on status codes\n    switch (error.response.status) {\n      case 400:\n        throw new Error('Bad Request: Please check your input.');\n      case 401:\n        throw new Error('Unauthorized: Please log in again.');\n      case 404:\n        throw new Error('Not Found: The resource you requested does not exist.');\n      case 500:\n      default:\n        throw new Error('An unexpected error occurred. Please try again later.');\n    }\n  } else {\n    throw new Error('Network Error: Please check your connection.');\n  }\n};\n\n// Export an API function\nexport const apiGet = async url => {\n  try {\n    const response = await apiClient.get(url);\n    return handleResponse(response);\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const apiPost = async (url, data) => {\n  try {\n    const response = await apiClient.post(url, data);\n    return handleResponse(response);\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Export other methods (put, delete, etc.) as needed","map":{"version":3,"names":["axios","apiClient","create","baseURL","timeout","handleResponse","response","data","handleError","error","console","status","Error","apiGet","url","get","apiPost","post"],"sources":["C:/Users/greha/OneDrive/Desktop/Capstone/app22-10/frontend/src/utils/api.js"],"sourcesContent":["// src/utils/api.js\r\nimport axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: 'http://localhost:5000', // Your API base URL\r\n  timeout: 10000, // Set a timeout for requests\r\n});\r\n\r\n// Handle API responses and errors\r\nconst handleResponse = (response) => response.data;\r\n\r\nconst handleError = (error) => {\r\n  // Log the error for debugging\r\n  console.error('API call error:', error);\r\n\r\n  // Check if the error has a response (from the server)\r\n  if (error.response) {\r\n    // Custom error messages based on status codes\r\n    switch (error.response.status) {\r\n      case 400:\r\n        throw new Error('Bad Request: Please check your input.');\r\n      case 401:\r\n        throw new Error('Unauthorized: Please log in again.');\r\n      case 404:\r\n        throw new Error('Not Found: The resource you requested does not exist.');\r\n      case 500:\r\n      default:\r\n        throw new Error('An unexpected error occurred. Please try again later.');\r\n    }\r\n  } else {\r\n    throw new Error('Network Error: Please check your connection.');\r\n  }\r\n};\r\n\r\n// Export an API function\r\nexport const apiGet = async (url) => {\r\n  try {\r\n    const response = await apiClient.get(url);\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    handleError(error);\r\n  }\r\n};\r\n\r\nexport const apiPost = async (url, data) => {\r\n  try {\r\n    const response = await apiClient.post(url, data);\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    handleError(error);\r\n  }\r\n};\r\n\r\n// Export other methods (put, delete, etc.) as needed\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;;AAEF;AACA,MAAMC,cAAc,GAAIC,QAAQ,IAAKA,QAAQ,CAACC,IAAI;AAElD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B;EACAC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;;EAEvC;EACA,IAAIA,KAAK,CAACH,QAAQ,EAAE;IAClB;IACA,QAAQG,KAAK,CAACH,QAAQ,CAACK,MAAM;MAC3B,KAAK,GAAG;QACN,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;MAC1D,KAAK,GAAG;QACN,MAAM,IAAIA,KAAK,CAAC,oCAAoC,CAAC;MACvD,KAAK,GAAG;QACN,MAAM,IAAIA,KAAK,CAAC,uDAAuD,CAAC;MAC1E,KAAK,GAAG;MACR;QACE,MAAM,IAAIA,KAAK,CAAC,uDAAuD,CAAC;IAC5E;EACF,CAAC,MAAM;IACL,MAAM,IAAIA,KAAK,CAAC,8CAA8C,CAAC;EACjE;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,MAAM,GAAG,MAAOC,GAAG,IAAK;EACnC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAML,SAAS,CAACc,GAAG,CAACD,GAAG,CAAC;IACzC,OAAOT,cAAc,CAACC,QAAQ,CAAC;EACjC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdD,WAAW,CAACC,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMO,OAAO,GAAG,MAAAA,CAAOF,GAAG,EAAEP,IAAI,KAAK;EAC1C,IAAI;IACF,MAAMD,QAAQ,GAAG,MAAML,SAAS,CAACgB,IAAI,CAACH,GAAG,EAAEP,IAAI,CAAC;IAChD,OAAOF,cAAc,CAACC,QAAQ,CAAC;EACjC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdD,WAAW,CAACC,KAAK,CAAC;EACpB;AACF,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}