{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\greha\\\\OneDrive\\\\Desktop\\\\Capstone\\\\app22-10\\\\frontend\\\\src\\\\components\\\\Chat.js\";\nimport { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport React from 'react';\n\n// Move socket connection inside the component or use a context\nlet socket;\nconst Chat = ({\n  donorId,\n  doneeId,\n  notifications,\n  setNotifications\n}) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  useEffect(() => {\n    socket = io('http://localhost:5000'); // Adjust this to your backend URL\n\n    socket.on('connect', () => {\n      console.log('Connected to WebSocket server');\n      socket.emit('joinChat', {\n        donorId,\n        doneeId\n      });\n    });\n\n    // Listen for messages received from the server\n    const messageReceivedHandler = message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n\n      // Add to notifications if the message is relevant to the current user\n      if (message.receiver === donorId || message.sender === donorId) {\n        setNotifications(prevNotifications => [...prevNotifications, message]);\n      }\n    };\n    socket.on('messageReceived', messageReceivedHandler);\n\n    // Cleanup function\n    return () => {\n      socket.off('messageReceived', messageReceivedHandler);\n      socket.off('connect');\n      socket.disconnect(); // Disconnect when the component unmounts\n    };\n  }, [donorId, doneeId, setNotifications]);\n  const handleSendMessage = () => {\n    if (!newMessage) return;\n    const messageData = {\n      sender: donorId,\n      receiver: doneeId,\n      message: newMessage\n    };\n    socket.emit('sendMessage', messageData); // Emit to the server\n    setNewMessage('');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Chat\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxHeight: '300px',\n      overflowY: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"chat-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, msg.sender === donorId ? 'Donor' : 'Donee', \":\"), \" \", msg.message))), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"chat-input\",\n    value: newMessage,\n    onChange: e => setNewMessage(e.target.value),\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n};\nexport default Chat;","map":{"version":3,"names":["useEffect","useState","io","React","socket","Chat","donorId","doneeId","notifications","setNotifications","messages","setMessages","newMessage","setNewMessage","on","console","log","emit","messageReceivedHandler","message","prevMessages","receiver","sender","prevNotifications","off","disconnect","handleSendMessage","messageData","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","maxHeight","overflowY","map","msg","index","key","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/greha/OneDrive/Desktop/Capstone/app22-10/frontend/src/components/Chat.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './Chat.css';\r\nimport React from 'react';\r\n\r\n// Move socket connection inside the component or use a context\r\nlet socket;\r\n\r\nconst Chat = ({ donorId, doneeId, notifications, setNotifications }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    socket = io('http://localhost:5000'); // Adjust this to your backend URL\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Connected to WebSocket server');\r\n      socket.emit('joinChat', { donorId, doneeId });\r\n    });\r\n\r\n    // Listen for messages received from the server\r\n    const messageReceivedHandler = (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n\r\n      // Add to notifications if the message is relevant to the current user\r\n      if (message.receiver === donorId || message.sender === donorId) {\r\n        setNotifications((prevNotifications) => [...prevNotifications, message]);\r\n      }\r\n    };\r\n\r\n    socket.on('messageReceived', messageReceivedHandler);\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      socket.off('messageReceived', messageReceivedHandler);\r\n      socket.off('connect');\r\n      socket.disconnect(); // Disconnect when the component unmounts\r\n    };\r\n  }, [donorId, doneeId, setNotifications]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (!newMessage) return;\r\n\r\n    const messageData = {\r\n      sender: donorId,\r\n      receiver: doneeId,\r\n      message: newMessage,\r\n    };\r\n\r\n    socket.emit('sendMessage', messageData); // Emit to the server\r\n    setNewMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h3>Chat</h3>\r\n      <div style={{ maxHeight: '300px', overflowY: 'scroll' }}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className=\"chat-message\">\r\n            <strong>{msg.sender === donorId ? 'Donor' : 'Donee'}:</strong> {msg.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <textarea\r\n        className=\"chat-input\"\r\n        value={newMessage}\r\n        onChange={(e) => setNewMessage(e.target.value)}\r\n        placeholder=\"Type your message...\"\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}