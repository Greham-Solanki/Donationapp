{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\greha\\\\OneDrive\\\\Desktop\\\\Capstone\\\\app22-10\\\\frontend\\\\src\\\\components\\\\ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiGet } from '../utils/api';\nimport Chat from './Chat';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = ({\n  currentUserId,\n  notifications,\n  setNotifications\n}) => {\n  _s();\n  const {\n    donorId,\n    donationId\n  } = useParams();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [error, setError] = useState(null);\n  const [isChatInitiated, setIsChatInitiated] = useState(false);\n  const [itemName, setItemName] = useState(''); // For chat heading\n\n  useEffect(() => {\n    const checkIfChatExists = async () => {\n      try {\n        const response = await apiGet(`/api/chats/existence/${currentUserId}/${donorId}/${donationId}`);\n        if (response !== null && response !== void 0 && response.exists) {\n          setIsChatInitiated(true);\n          // Assuming the itemName should come from a separate API if not included in the existence response\n          const donationResponse = await apiGet(`/api/donations/${donationId}`);\n          setItemName((donationResponse === null || donationResponse === void 0 ? void 0 : donationResponse.itemName) || \"Item Name Not Found\");\n\n          // Fetch the chat history only if the chat exists\n          const historyResponse = await apiGet(`/api/chats/${donationId}`);\n          setChatHistory(historyResponse || []);\n        } else {\n          setIsChatInitiated(false);\n          setChatHistory([]);\n        }\n      } catch (err) {\n        console.error(\"Error fetching chat data:\", err);\n        setError(\"Unable to load chat history. Please try again later.\");\n      }\n    };\n    checkIfChatExists();\n  }, [currentUserId, donorId, donationId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat about: \", itemName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), isChatInitiated ? /*#__PURE__*/_jsxDEV(Chat, {\n      userId: currentUserId,\n      donorId: donorId,\n      donationId: donationId,\n      chatHistory: chatHistory,\n      setChatHistory: setChatHistory,\n      notifications: notifications,\n      setNotifications: setNotifications\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No chat history found. Please initiate chat from the donation details page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"quA7qOHSEH4FPE6cqoCpqzQ5LBU=\", false, function () {\n  return [useParams];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","apiGet","Chat","jsxDEV","_jsxDEV","ChatPage","currentUserId","notifications","setNotifications","_s","donorId","donationId","chatHistory","setChatHistory","error","setError","isChatInitiated","setIsChatInitiated","itemName","setItemName","checkIfChatExists","response","exists","donationResponse","historyResponse","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","userId","_c","$RefreshReg$"],"sources":["C:/Users/greha/OneDrive/Desktop/Capstone/app22-10/frontend/src/components/ChatPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { apiGet } from '../utils/api';\r\nimport Chat from './Chat';\r\nimport './Chat.css';\r\n\r\nconst ChatPage = ({ currentUserId, notifications, setNotifications }) => {\r\n  const { donorId, donationId } = useParams();\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isChatInitiated, setIsChatInitiated] = useState(false);\r\n  const [itemName, setItemName] = useState(''); // For chat heading\r\n\r\n  useEffect(() => {\r\n    const checkIfChatExists = async () => {\r\n      try {\r\n        const response = await apiGet(`/api/chats/existence/${currentUserId}/${donorId}/${donationId}`);\r\n\r\n        if (response?.exists) {\r\n          setIsChatInitiated(true);\r\n          // Assuming the itemName should come from a separate API if not included in the existence response\r\n          const donationResponse = await apiGet(`/api/donations/${donationId}`);\r\n          setItemName(donationResponse?.itemName || \"Item Name Not Found\");\r\n\r\n          // Fetch the chat history only if the chat exists\r\n          const historyResponse = await apiGet(`/api/chats/${donationId}`);\r\n          setChatHistory(historyResponse || []);\r\n        } else {\r\n          setIsChatInitiated(false);\r\n          setChatHistory([]);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching chat data:\", err);\r\n        setError(\"Unable to load chat history. Please try again later.\");\r\n      }\r\n    };\r\n\r\n    checkIfChatExists();\r\n  }, [currentUserId, donorId, donationId]);\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      <h2>Chat about: {itemName}</h2> {/* Display item name as heading */}\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {isChatInitiated ? (\r\n        <Chat \r\n          userId={currentUserId} \r\n          donorId={donorId} \r\n          donationId={donationId}\r\n          chatHistory={chatHistory} \r\n          setChatHistory={setChatHistory} \r\n          notifications={notifications} \r\n          setNotifications={setNotifications} \r\n        />\r\n      ) : (\r\n        <p>No chat history found. Please initiate chat from the donation details page.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}