{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\greha\\\\OneDrive\\\\Desktop\\\\Capstone\\\\app22-10\\\\frontend\\\\src\\\\components\\\\DonationDetails.js\";\n// src/components/DonationDetails.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Chat from './Chat'; // Import your Chat component\n\nconst DonationDetails = ({\n  currentUserId\n}) => {\n  const [donation, setDonation] = useState(null); // State to hold donation data\n  const [initialMessage, setInitialMessage] = useState(\"\");\n  const [showChat, setShowChat] = useState(false); // State to control chat visibility\n  const navigate = useNavigate();\n  const {\n    donationId\n  } = useParams(); // Assuming donation ID is in the URL\n\n  console.log(\"Donation ID:\", donationId); // Check if donationId is extracted correctly\n\n  // Fetch donation data when the component mounts\n  useEffect(() => {\n    const fetchDonation = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/donations/${donationId}`);\n        setDonation(response.data); // Set the donation data\n      } catch (error) {\n        console.error(\"Error fetching donation data:\", error);\n      }\n    };\n    fetchDonation();\n  }, [donationId]);\n  const handleSendMessage = async () => {\n    if (!initialMessage.trim()) return;\n    try {\n      await axios.post('http://localhost:5000/api/chats', {\n        sender: currentUserId,\n        receiver: donation === null || donation === void 0 ? void 0 : donation.donorId,\n        // Check if donation is defined\n        message: initialMessage,\n        donationId: donation === null || donation === void 0 ? void 0 : donation._id\n      });\n      setInitialMessage(\"\");\n      setShowChat(true); // Show chat component after sending the message\n    } catch (error) {\n      console.error(\"Error initiating chat:\", error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, donation ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, donation.itemName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, donation.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Category: \", donation.category), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Location: \", donation.location), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Status: \", donation.status), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Type your message...\",\n    value: initialMessage,\n    onChange: e => setInitialMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Send Message\"), showChat && /*#__PURE__*/React.createElement(Chat, {\n    userId: currentUserId,\n    donorId: donation.donorId,\n    donationId: donation._id,\n    chatHistory: [] // You can manage chat history state here\n    ,\n    setChatHistory: () => {} // You may want to implement chat history management\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Loading donation details...\"));\n};\nexport default DonationDetails;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useParams","Chat","DonationDetails","currentUserId","donation","setDonation","initialMessage","setInitialMessage","showChat","setShowChat","navigate","donationId","console","log","fetchDonation","response","get","data","error","handleSendMessage","trim","post","sender","receiver","donorId","message","_id","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","itemName","description","category","location","status","placeholder","value","onChange","e","target","onClick","userId","chatHistory","setChatHistory"],"sources":["C:/Users/greha/OneDrive/Desktop/Capstone/app22-10/frontend/src/components/DonationDetails.js"],"sourcesContent":["// src/components/DonationDetails.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Chat from './Chat'; // Import your Chat component\r\n\r\nconst DonationDetails = ({ currentUserId }) => {\r\n  const [donation, setDonation] = useState(null); // State to hold donation data\r\n  const [initialMessage, setInitialMessage] = useState(\"\");\r\n  const [showChat, setShowChat] = useState(false); // State to control chat visibility\r\n  const navigate = useNavigate();\r\n  const { donationId } = useParams(); // Assuming donation ID is in the URL\r\n\r\n  console.log(\"Donation ID:\", donationId); // Check if donationId is extracted correctly\r\n\r\n  // Fetch donation data when the component mounts\r\n  useEffect(() => {\r\n    const fetchDonation = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/donations/${donationId}`);\r\n        setDonation(response.data); // Set the donation data\r\n      } catch (error) {\r\n        console.error(\"Error fetching donation data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDonation();\r\n  }, [donationId]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!initialMessage.trim()) return;\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/chats', {\r\n        sender: currentUserId,\r\n        receiver: donation?.donorId, // Check if donation is defined\r\n        message: initialMessage,\r\n        donationId: donation?._id\r\n      });\r\n\r\n      setInitialMessage(\"\");\r\n      setShowChat(true); // Show chat component after sending the message\r\n    } catch (error) {\r\n      console.error(\"Error initiating chat:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {donation ? (\r\n        <>\r\n          <h2>{donation.itemName}</h2>\r\n          <p>{donation.description}</p>\r\n          <p>Category: {donation.category}</p>\r\n          <p>Location: {donation.location}</p>\r\n          <p>Status: {donation.status}</p>\r\n\r\n          <textarea\r\n            placeholder=\"Type your message...\"\r\n            value={initialMessage}\r\n            onChange={(e) => setInitialMessage(e.target.value)}\r\n          />\r\n          <button onClick={handleSendMessage}>Send Message</button>\r\n\r\n          {/* Show Chat component when a message is sent */}\r\n          {showChat && (\r\n            <Chat \r\n              userId={currentUserId} \r\n              donorId={donation.donorId} \r\n              donationId={donation._id} \r\n              chatHistory={[]} // You can manage chat history state here\r\n              setChatHistory={() => {}} // You may want to implement chat history management\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p>Loading donation details...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DonationDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}